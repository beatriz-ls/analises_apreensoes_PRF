---
output:
  html_document:
    self-contained: true
    number_sections: false
    toc: true
---

```{r, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(
  comment = "",
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

library(dplyr)
library(highcharter)
library(lubridate)
library(tseries)
library(forecast)
library(zoo)
```

# Análise das apreensões realizadas pela Polícia Federal

## Sobre os dados

Os dados são referentes as apreensões de drogas feitas pela Polícia Federal e foram obtidos através do Observatório Brasileiro de Informações sobre Drogas (OBID), [obid/seguranca-publica](https://www.gov.br/mj/pt-br/assuntos/sua-protecao/politicas-sobre-drogas/obid/seguranca-publica), vinculado ao Ministério da Justiça e Segurança Pública.

Ao total são quatro bases relacionadas as apreensões feitas pela PF, **PF_Apreensoes_Portos_Aeroportos**, **PF_Apreensoes**, **PF_BaseCircunscricao** e **PF_NovasSubstanciasPsicoativas**.

A base **PF_BaseCircunscricao** não será utilizada na análise por se limitar a informações administrativas sobre delegacias. Da mesma forma, a base **PF_NovasSubstanciasPsicoativas** não será utilizada por não conter qualquer informação geográfica que permitisse localizar as apreensões no território nacional.

Após a filtragem por ocorrencias no estado do Espírito Santo, foi verificado que a base **PF_Apreensoes_Portos_Aeroportos** se limita a somente apreensões feitas no aeroporto e porto de Vitória, já a base **PF_Apreensoes** se limita a apreensões feitas nas regiões central e litoral, noroeste e nordeste e sul do Espírito Santo.

Separação regional utilizada pela Polícia Federal na base **PF_Apreensoes**:

-   **Central e litoral**: Afonso Cláudio, Alfredo Chaves, Anchieta, Aracruz, Baixo Guandu, Brejetuba, Cariacica, Colatina, Domingos Martins, Fundão, Guarapari, Ibiraçu, Itaguaçu, Itarana, João Neiva, Laranja da Terra, Linhares, Marechal Floriano, Marilândia, Rio Bananal, Santa Leopoldina, Santa Maria de Jetibá, Santa Teresa, São Roque do Canaã, Serra, Sooretama, Venda Nova do Imigrante, Viana, Vila Velha, Vitória.

-   **Noroeste e Nordeste**: Água Doce do Norte, Águia Branca, Alto Rio Novo, Barra de São Francisco, Boa Esperança, Conceição da Barra, Ecoporanga, Governador Lindenberg, Jaguaré, Mantenópolis, Montanha, Mucurici, Nova Venécia, Pancas, Pedro Canário, Pinheiros, Ponto Belo, São Domingos do Norte, São Gabriel da Palha, São Mateus, Vila Pavão, Vila Valério.

-   **Sul**: Alegre, Apiacá, Atilio Vivacqua, Bom Jesus do Norte, Cachoeiro de Itapemirim, Castelo, Conceição do Castelo, Divino de São Lourenço, Dores do Rio Preto, Guaçuí, Ibatiba, Ibitirama, Iconha, Irupi, Itapemirim, Iúna, Jerônimo Monteiro, Marataízes, Mimoso do Sul, Muniz Freire, Muqui, Piúma, Presidente Kennedy, Rio Novo do Sul, São José do Calçado, Vargem Alta.

Dos municipios com bairros abrangidos pelo projeto Estado Presente, nove se localizam nas regiões central e litoral, Aracruz, Cariacica, Colatina, Linhares, Serra, Vila Velha, Vitória, um nas regiões noroeste e nordeste, São Mateus, e um na região sul, Cachoeiro de Itapemirim.

## Análise descritiva

### Apreensão de drogas em portos e aeroportos pela Polícia Federal

<!-- Breve apresentação da base (primeiras cinco linhas). -->

```{r}
PF_APA <- read.csv("data-raw/PF_Apreensoes_Portos_Aeroportos.csv", sep =";", header=TRUE, check.names = FALSE) |> janitor::clean_names() |> dplyr::filter(uf == "ES")

# PF_APA |> head(n = 5) |> knitr::kable() 
```

```{r}
PF_APA <- PF_APA |> 
  mutate(
    data = lubridate::mdy(data),  
    ano = lubridate::year(data)  
  )
```

```{r}
df_freq <- PF_APA |>
  count(origem, ano) 

highchart() |>
  hc_add_series(
    data = df_freq,
    type = "column",
    hcaes(x = ano, y = n, group = origem)
  ) |>
  hc_xAxis(title = list(text = "Ano"), categories = unique(df_freq$ano)) |>
  hc_yAxis(title = list(text = "Número de Apreensões")) |>
  hc_title(text = "Frequência Anual de Apreensões por Origem") |>
  hc_subtitle(text = "Dados Polícia Federal Portos e Aeroportos") |>
  hc_tooltip(
    shared = TRUE,
    headerFormat = "<b>Ano: {point.key}</b><br/>",
    pointFormat = "{series.name}: {point.y} </b><br/>"
  ) |>
  hc_legend(enabled = TRUE) |>
  hc_plotOptions(
    column = list(
      # stacking = "normal",
      dataLabels = list(enabled = FALSE)
    )
  ) |>
  hc_colors(viridis::viridis(4)) |>
  hc_caption(text = "Gráfico 1 - Frequência anual de apreensões de drogas por origem para os anos de 2014 a 2023")
             
```

Para o Espírito Santo, todas as apreensões foram realizadas no porto ou no aeroporto de Vitória. Observando o gráfico 1 pode-se notar que o ano de 2019 registrou o maior número de apreensões, com 13 ocorrências, das quais 11 tiveram origem no aeroporto de Vitória.

```{r}
df_freq <- PF_APA |>
  count(droga, ano) 

highchart() |>
  hc_add_series(
    data = df_freq,
    type = "column",
    hcaes(x = ano, y = n, group = droga)
  ) |>
  hc_xAxis(title = list(text = "Ano"), categories = unique(df_freq$ano)) |>
  hc_yAxis(title = list(text = "Número de Apreensões")) |>
  hc_title(text = "Frequência Anual de Apreensões por Tipo de Droga") |>
  hc_subtitle(text = "Dados Polícia Federal Portos e Aeroportos") |>
  hc_tooltip(
    shared = TRUE,
    headerFormat = "<b>Ano: {point.key}</b><br/>",
    pointFormat = "{series.name}: {point.y} </b><br/>"
  ) |>
  hc_legend(enabled = TRUE) |>
  hc_plotOptions(
    column = list(
      # stacking = "normal",
      dataLabels = list(enabled = FALSE)
    )
  ) |>
  hc_colors(viridis::viridis(4)) |>
  hc_caption(text = "Gráfico 2 - Frequência anual de apreensões de drogas por tipo de droga para os anos de 2014 a 2023")

```

O gráfico 2 evidencia a predominância de apreensões de cocaína em relação às demais substâncias. Do total de 35 ocorrências registradas no período analisado, 27 corresponderam à cocaína. O ano de 2022 destacou-se particularmente, com 22 apreensões registradas sendo todas de cocaína.

```{r}
dados_anual <- PF_APA |>
  mutate(
    quantidade = as.numeric(quantidade),
    data = as.Date(data),
    ano = year(data)  # Extrai apenas o ano da data
  ) |>
  filter(!is.na(quantidade), 
         !is.na(ano), 
         !is.na(droga),
         quantidade > 0) |>
  group_by(ano, droga) |>  # Agrupa por ano e tipo de droga
  summarise(total_apreendido = sum(quantidade), .groups = "drop")

highchart() |>
  hc_add_series(
    data = dados_anual,
    type = "line",
    hcaes(x = ano, y = total_apreendido, group = droga),
    marker = list(radius = 4)                            
  ) |>
  hc_xAxis(
    title = list(text = "Ano"),
    allowDecimals = FALSE,  # Remove decimais nos anos
    gridLineWidth = 1
  ) |>
  hc_yAxis(
    title = list(text = "Quantidade Apreendida (gramas)"),
    labels = list(format = "{value:,.0f}"),
    min = 0
  ) |>
  hc_title(text = "Apreensões Anuais por Tipo de Droga") |>
  hc_subtitle(text = "Dados Polícia Federal Portos e Aeroportos") |>
  hc_tooltip(
    headerFormat = "<b>Ano: {point.x}</b><br>",
    pointFormat = "{series.name}: <b>{point.y:,.0f} gramas</b>",
    shared = FALSE
  ) |>
  # hc_legend(
  #   align = "right",
  #   verticalAlign = "top",
  #   layout = "vertical"
  # ) |>
  hc_colors(viridis::viridis(length(unique(dados_anual$droga)))) |>
  hc_caption(text = "Gráfico 3 - Apreensões anuais por tipo de droga para os anos de 2014 a 2023")
```

No gráfico 3 pode-se observar que o ano de 2023 registrou o maior volume em gramas apreendidas, embora tenha sido somente o terceiro em número de ocorrências segundo o gráfico 2. Observa-se ainda uma disparidade significativa entre as quantidades apreendidas de cocaína e maconha.

```{r}
PF_APA_anual <- PF_APA |>
  mutate(
    quantidade = as.numeric(quantidade),
    data = as.Date(data),
    ano = year(data)  # Extrai apenas o ano da data
  ) |>
  filter(!is.na(quantidade), 
         !is.na(ano), 
         !is.na(droga),
         quantidade > 0) |>
  group_by(ano) |>  # Agrupa por ano e tipo de droga
  summarise(total_apreendido = sum(quantidade), .groups = "drop")

highchart() |>
    hc_add_series(
    data = PF_APA_anual,
    type = "line", 
    hcaes(x = ano, y = total_apreendido),
    name = "Total Apreendido",
    showInLegend = TRUE,
    marker = list(
      enabled = TRUE,
      radius = 4
    ),
    lineWidth = 3,
    color = "#4285F4"
  ) |>
  hc_xAxis(
    title = list(text = "Ano"),
    allowDecimals = FALSE,  # Remove decimais nos anos
    gridLineWidth = 1
  ) |>
  hc_yAxis(
    title = list(text = "Quantidade Apreendida (gramas)"),
    labels = list(format = "{value:,.0f}"),
    min = 0
  ) |>
  hc_title(text = "Quantidade Anual de Apreensões de Drogas") |>
  hc_subtitle(text = "Dados Polícia Federal Portos e Aeroportos") |>
  hc_tooltip(
    headerFormat = "<b>Ano: {point.x}</b><br>",
    pointFormat = "Total apreendido: <b>{point.y:,.0f} gramas</b>",
    shared = FALSE
  ) |>
  # hc_legend(
  #   align = "right",
  #   verticalAlign = "top",
  #   layout = "vertical"
  # ) |>
  hc_colors(viridis::viridis(length(unique(dados_anual$droga)))) |>
  hc_caption(text = "Gráfico 4 - Apreensões anuais para os anos de 2014 a 2023")
```

O gráfico 4 apresenta o volume total de apreensões (em gramas) realizadas pela Polícia Federal em portos e aeroportos do Espírito Santo entre 2014 e 2023.

### Apreensões de drogas pela Polícia Federal

<!-- Breve apresentação da base (primeiras cinco linhas). -->

```{r}
PF_A <- read.csv("data-raw/PF_Apreensoes.csv", sep =";", header=TRUE, check.names = FALSE) |> janitor::clean_names() |> dplyr::filter(uf == "ES")

PF_A[PF_A$municipios == "Afonso Cláudio, Alfredo Chaves, Anchieta, Aracruz, Baixo Guandu, Brejetuba, Cariacica, Colatina, Domingos Martins, Fundão, Guarapari, Ibiraçu, Itaguaçu, Itarana, João Neiva, Laranja da Terra, Linhares, Marechal Floriano, Marilândia, Rio Bananal, Santa Leopoldina, Santa Maria de Jetibá, Santa Teresa, São Roque do Canaã, Serra, Sooretama, Venda Nova do Imigrante, Viana, Vila Velha, Vitória", ]$municipios <- "Central e litoral"

PF_A[PF_A$municipios == "Água Doce do Norte, Águia Branca, Alto Rio Novo, Barra de São Francisco, Boa Esperança, Conceição da Barra, Ecoporanga, Governador Lindenberg, Jaguaré, Mantenópolis, Montanha, Mucurici, Nova Venécia, Pancas, Pedro Canário, Pinheiros, Ponto Belo, São Domingos do Norte, São Gabriel da Palha, São Mateus, Vila Pavão, Vila Valério", ]$municipios <- "Noroeste e Nordeste"

PF_A[PF_A$municipios == "Alegre, Apiacá, Atilio Vivacqua, Bom Jesus do Norte, Cachoeiro de Itapemirim, Castelo, Conceição do Castelo, Divino de São Lourenço, Dores do Rio Preto, Guaçuí, Ibatiba, Ibitirama, Iconha, Irupi, Itapemirim, Iúna, Jerônimo Monteiro, Marataízes, Mimoso do Sul, Muniz Freire, Muqui, Piúma, Presidente Kennedy, Rio Novo do Sul, São José do Calçado, Vargem Alta", ]$municipios <- "Sul"

PF_A <- PF_A |> rename(regiao_es = municipios)

# PF_A |> head(n = 5) |> knitr::kable()
```

```{r}
PF_A$data <- lubridate::ymd_hms(PF_A$data) |> as.Date()

PF_A <- PF_A |> 
  mutate(
    ano = lubridate::year(data)  
  )
```

Substâncias derivadas da cannabis (maconha, skunk e haxixe) foram agrupadas em uma única categoria para facilitar a visualização.

```{r}
df_freq <- PF_A |>
  # filter(unidade == "Gramas") |>
    mutate(item = case_when(
    item %in% c("Maconha (g)","Skunk (g)","Haxixe (g)") ~ "Cannabis e derivados (g)",
    TRUE ~ item
  )) |>
  count(item, ano) |> 
  filter(!is.na(item)) |>
  group_by(ano) |>
  # mutate(percent = n / sum(n) * 100) |>
  ungroup()

highchart() |>
  hc_add_series(
    data = df_freq,
    type = "column",
    hcaes(x = ano,
          y = n, # y = percent,
          group = item)
  ) |>
  hc_xAxis(title = list(text = "Ano"), categories = unique(df_freq$ano)) |>
  hc_yAxis(
    title = list(text = "Número de Apreensões")
    # labels = list(format = "{value}%")
  ) |>
  hc_title(text = "Frenquência Anual de Apreensões de Drogas por Item") |>
  hc_subtitle(text = "Dados Polícia Federal") |>
  hc_tooltip(
    shared = TRUE,
    headerFormat = "<b>Ano: {point.key}</b><br/>",
    # pointFormat = "{series.name}: <b>{point.n}</b> ({point.percent:.1f}%)<br/>" 
    pointFormat = "{series.name}: <b>{point.n}</b><br/>" 
  ) |>
  hc_legend(enabled = TRUE) |>
  hc_plotOptions(
    column = list(
      # stacking = "percent",
      events = {
        afterAnimate = JS("function() {
          var points = this.points || [];
          points.forEach(function(point) {
            point.percent = point.percentage;  // Garante acesso ao percentual
            point.n = point.y / point.percentage * 100;  // Calcula o valor absoluto
          });
        }")
      }
    )
  ) |>
  hc_colors(viridis::viridis(8)) |>
  hc_caption(text = "Gráfico 5 - Frenquência anual de apreensões de drogas por item para os anos de 2014 a 2023")
```

O gráfico 5 revela a predominância de apreensões de Cannabis e derivados e cocaína durante o período analisado. O ano de 2020 destacou-se com 79 ocorrências no total, sendo 42 de Cannabis e derivados e 11 de cocaína. Este mesmo ano registrou também o maior volume de apreensões de lança-perfume, com 11 ocorrências, totalizando 460 frascos apreendidos.

```{r}
dados_grafico <- PF_A |>
  filter(unidade == "Gramas") |> 
  mutate(
    quantidade = as.numeric(quantidade),
    ano = as.numeric(ano)
  ) |>
  filter(!is.na(quantidade), !is.na(ano), !is.na(item), quantidade > 0) |> 
  group_by(ano, item) |>
  summarise(total_apreendido = sum(quantidade), .groups = "drop")

# Criar gráfico
highchart() |>
  hc_add_series(
    data = dados_grafico,
    type = "line",
    hcaes(x = ano, y = total_apreendido, group = item),
    marker = list(
      radius = 4,
      symbol = "circle",
      lineWidth = 1
    )                            
  ) |>
  hc_xAxis(
    title = list(text = "Ano"),
    allowDecimals = FALSE,  # Evita decimais nos anos
    labels = list(
      formatter = JS("function() { return this.value; }")  # Mostra anos inteiros
    )
  ) |>
  hc_yAxis(
    title = list(text = "Quantidade Apreendida (gramas)"),
    labels = list(format = "{value:,.0f}"),
    min = 0  # Eixo Y começa em zero
  ) |>
  hc_title(text = "Quantidade Anual de Apreensões de Drogas por Item") |>
  hc_subtitle(text = "Dados Polícia Federal") |>
  hc_tooltip(
    headerFormat = "<b>Ano: {point.x}</b><br>",
    pointFormat = "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.y:,.0f} g</b>",
    shared = FALSE,
    crosshairs = TRUE,
    valueDecimals = 0
  ) |>
  # hc_legend(
  #   align = "right",
  #   verticalAlign = "middle",
  #   layout = "vertical",
  #   itemStyle = list(fontWeight = "normal")
  # ) |>
  hc_plotOptions(
    line = list(
      lineWidth = 3,
      states = list(
        hover = list(lineWidthPlus = 2)
    )
  )) |>
  hc_colors(viridis::viridis(length(unique(dados_grafico$item)), option = "D")) |>
  hc_caption(text = "Gráfico 6 - Quantidade anual de apreensões de drogas por item para os anos de 2014 a 2023")
```

O gráfico 6 mostra um aumento progressivo nas quantidades anuais apreendidas ao longo dos anos, com a maconha e a cocaína como as substâncias de maior volume. Destaca-se em 2022 a apreensão de 3.715 kg de maconha e 1.681 kg de cocaína.

```{r}
dados_grafico <- PF_A |>
  filter(unidade == "Gramas") |> 
  mutate(
    quantidade = as.numeric(quantidade),
    ano = as.numeric(ano)
  ) |>
  filter(!is.na(quantidade), !is.na(ano), !is.na(item), quantidade > 0) |> 
  group_by(ano, regiao_es) |>
  summarise(total_apreendido = sum(quantidade), .groups = "drop")

# Criar gráfico
highchart() |>
  hc_add_series(
    data = dados_grafico,
    type = "line",
    hcaes(x = ano, y = total_apreendido, group = regiao_es),
    marker = list(
      radius = 4,
      symbol = "circle",
      lineWidth = 1
    )                            
  ) |>
  hc_xAxis(
    title = list(text = "Ano"),
    allowDecimals = FALSE,  # Evita decimais nos anos
    labels = list(
      formatter = JS("function() { return this.value; }")  # Mostra anos inteiros
    )
  ) |>
  hc_yAxis(
    title = list(text = "Quantidade Apreendida (gramas)"),
    labels = list(format = "{value:,.0f}"),
    min = 0  # Eixo Y começa em zero
  ) |>
  hc_title(text = "Quantidade Anual de Apreensões de Drogas por Regiões do Espírito Santo") |>
  hc_subtitle(text = "Dados Polícia Federal") |>
  hc_tooltip(
    headerFormat = "<b>Ano: {point.x}</b><br>",
    pointFormat = "<span style=\"color:{point.color}\">●</span> {series.name}: <b>{point.y:,.0f} g</b>",
    shared = FALSE,
    crosshairs = TRUE,
    valueDecimals = 0
  ) |>
  # hc_legend(
  #   align = "right",
  #   verticalAlign = "middle",
  #   layout = "vertical",
  #   itemStyle = list(fontWeight = "normal")
  # ) |>
  hc_plotOptions(
    line = list(
      lineWidth = 3,
      states = list(
        hover = list(lineWidthPlus = 2)
    )
  )) |>
  hc_colors(viridis::viridis(length(unique(dados_grafico$regiao_es)), option = "E")) |>
  hc_caption(text = "Gráfico 7 - Quantidade anual de apreensões de drogas por regiões do Espírito Santo para os anos de 2014 a 2023")
```

O Gráfico 7 apresenta a distribuição das apreensões por regiões do Espírito Santo, evidenciando diferenças significativas entre os grupos regionais. A região Central e Litoral responde pela grande maioria das apreensões, um padrão que pode ser observado consistentemente nos dados.

Embora a ausência de granularidade municipal não permita estabelecer uma relação direta com o programa Estado Presente, é relevante destacar que esta região concentra a maior parte dos municípios com territórios atendidos pelo projeto. A predominância das apreensões nesta área pode refletir tanto a maior efetividade das ações policiais quanto as características demográficas e geográficas da região.

```{r}
PF_A_anual <- PF_A |>
  mutate(
    quantidade = as.numeric(quantidade),
    ano = year(as.Date(data)) 
  ) |>
  filter(!is.na(quantidade), quantidade > 0) |> 
  group_by(ano) |>
  summarise(
    total_gramas = sum(quantidade, na.rm = TRUE), 
    .groups = "drop"
  ) 
highchart() |>
  hc_add_series(
    data = PF_A_anual,
    type = "line", 
    hcaes(x = ano, y = total_gramas),
    name = "Total Apreendido",
    showInLegend = TRUE,
    marker = list(
      enabled = TRUE,
      radius = 4
    ),
    lineWidth = 3,
    color = "#4285F4"
  ) |>
  hc_xAxis(
    title = list(text = "Ano"),
    allowDecimals = FALSE,
    gridLineWidth = 1
  ) |>
  hc_yAxis(
    title = list(text = "Peso Total Apreendido (gramas)"),
    labels = list(format = "{value:,.0f}"),
    min = 0
  ) |>
  hc_title(text = "Quantidade Anual de Apreensões de Drogas") |>
  hc_subtitle(text = "Dados Polícia Federal") |>
  hc_tooltip(
    headerFormat = "<b>Ano: {point.x}</b><br>",
    pointFormat = "Total apreendido: <b>{point.y:,.0f} gramas</b>",
    shared = FALSE
  ) |>
  hc_caption(text = "Gráfico 8 - Quantidade anual de apreensões de drogas para os anos de 2014 a 2023")
```

O Gráfico 8 apresenta o volume total de apreensões (em gramas) realizadas pela Polícia Federal do Espírito Santo entre 2014 e 2023.

# Análise das apreensões realizadas pelas policias estaduais

## Sobre os dados

Os dados são referentes as apreensões de drogas feitas pelas polícias estaduais e foram obtidos através do Observatório Brasileiro de Informações sobre Drogas (OBID), [obid/seguranca-publica](https://www.gov.br/mj/pt-br/assuntos/sua-protecao/politicas-sobre-drogas/obid/seguranca-publica), vinculado ao Ministério da Justiça e Segurança Pública.

Embora a base de dados contenha registros a partir de 2016, as variáveis de interesse 'total' e 'peso_total' apresentam valores exclusivamente disponíveis a partir de 2018. Os registros dos anos de 2016 e 2017 para essas métricas específicas consistem inteiramente em valores NA, indicando ausência de dados mensuráveis nesse período inicial.

## Análise descritiva

<!-- Breve apresentação da base (primeiras cinco linhas). -->

```{r}
SINESP <- read.csv("data-raw/SINESP_Apreensoes.csv", sep =";", header=TRUE, check.names = FALSE) |> janitor::clean_names() |> dplyr::filter(uf == "ES") |> filter(ano > 2017)

SINESP <- SINESP |>
  mutate(across(where(is.character), 
                ~iconv(., from = "latin1", to = "UTF-8"))) |>
  mutate(across(where(is.character),
                ~gsub("�", "Ã", .)))  # Replace remaining corrupted chars

SINESP <- SINESP |>
  mutate(
    municipio = gsub("N�O INFORMADO", "NÃO INFORMADO", municipio),
    evento = gsub("Tr�fico", "Tráfico", evento),
    formulario = gsub("Formul�rio", "Formulário", formulario)
  )

SINESP$data_referencia <- lubridate::dmy(SINESP$data_referencia) |> as.Date()


# municipios_estado_presente <- c("Aracruz", "Cariacica", "Cachoeiro de Itapemirim","Colatina", "Linhares", "São Mateus", "Serra","Vila Velha", "Vitória")

# SINESP |> head(n = 5) |> knitr::kable()
```

```{r}
dados_grafico <- SINESP |>
  filter(!is.na(total_peso), !is.na(data_referencia), !is.na(evento)) |> 
  mutate(
    total_peso = as.numeric(total_peso),
    data_referencia = as.Date(data_referencia)                
  ) |>
  group_by(data_referencia, evento) |>
  summarise(total_apreendido = sum(total_peso), .groups = "drop")

highchart() |>
  hc_add_series(
    data = dados_grafico,
    type = "line",
    hcaes(x = data_referencia, y = total_apreendido, group = evento),
    marker = list(radius = 4)                            
  ) |>
  hc_xAxis(
    type = "datetime",
    title = list(text = "Data da Apreensão"),
    labels = list(format = "{value:%d/%m/%Y}")
  ) |>
  hc_yAxis(
    title = list(text = "Total peso"),
    labels = list(format = "{value:,.0f}")
  ) |>
  hc_title(text = "Total Peso Mensal de Drogas Apreendidas") |>
  hc_subtitle(text = "Dados polícia estadual do Espírito Santo") |>
  hc_tooltip(
    headerFormat = "<b>Data: {point.x:%d/%m/%Y}</b><br>",
    pointFormat = "{series.name}: <b>{point.y:,.0f} </b>",
    shared = FALSE,
    crosshairs = TRUE
  ) |>
  # hc_legend(
  #   align = "right",
  #   verticalAlign = "top",
  #   layout = "vertical"
  # ) |>
  hc_plotOptions(
    line = list(
      colorByPoint = FALSE,
      marker = list(enabled = FALSE),  # Remove pontos
      lineWidth = 3,
      states = list(hover = list(lineWidthPlus = 1))
    )
  ) |>
  hc_colors(viridis::viridis(4)) |>
  hc_caption(text = "Gráfico 9 - Total peso mensal de drogas apreendidas para os meses entre 01/01/2018 e 01/12/2023")
```

O Gráfico 9 apresenta a série temporal do peso total das apreensões de cocaína e maconha. Conforme o dicionário de dados, esta variável é definida como "valor numérico da quantidade, peso ou volume apreendido".

Embora a unidade de medida não esteja especificada, a comparação entre os tipos de drogas permanece válida. Observa-se clara predominância da maconha (média mensal de 200.7) sobre a cocaína (média mensal de 10.5).

```{r}
dados_grafico <- SINESP |>
  filter(!is.na(total), !is.na(data_referencia), !is.na(evento)) |> 
  mutate(
    total_peso = as.numeric(total),
    data_referencia = as.Date(data_referencia)                
  ) |>
  group_by(data_referencia, evento) |>
  summarise(total_apreendido = sum(total), .groups = "drop")

highchart() |>
  hc_add_series(
    data = dados_grafico,
    type = "line",
    hcaes(x = data_referencia, y = total_apreendido, group = evento),
    marker = list(radius = 4)                            
  ) |>
  hc_xAxis(
    type = "datetime",
    title = list(text = "Data da Apreensão"),
    labels = list(format = "{value:%d/%m/%Y}")
  ) |>
  hc_yAxis(
    title = list(text = "Total"),
    labels = list(format = "{value:,.0f}")
  ) |>
  hc_title(text = "Total Mensal de Drogas Apreendidas") |>
  hc_subtitle(text = "Dados polícia estadual do Espírito Santo") |>
  hc_tooltip(
    headerFormat = "<b>Data: {point.x:%d/%m/%Y}</b><br>",
    pointFormat = "{series.name}: <b>{point.y:,.0f} </b>",
    shared = FALSE,
    crosshairs = TRUE
  ) |>
  # hc_legend(
  #   align = "right",
  #   verticalAlign = "top",
  #   layout = "vertical"
  # ) |>
  hc_plotOptions(
    line = list(
      colorByPoint = FALSE,
      marker = list(enabled = FALSE),  # Remove pontos
      lineWidth = 3,
      states = list(hover = list(lineWidthPlus = 1))
    )
  ) |>
  hc_colors(viridis::viridis(4)[3]) |>
  hc_caption(text = "Gráfico 10 - Total mensal de drogas apreendidas para os meses entre 01/01/2018 e 01/12/2023")
```

O Gráfico 10 apresenta a série temporal do total das apreensões relacionadas a tráfico de drogas. Conforme o dicionário de dados, esta variável é definida como "valor numérico da quantidade, peso ou volume apreendido".

## Análise temporal

A decomposição STL (Seasonal and Trend decomposition using Loess) é uma técnica estatística para analisar séries temporais, decompondo-as em três componentes principais:

-   **Tendência (Trend)**: Mostra a direção geral dos dados ao longo do tempo (crescimento, declínio ou estabilidade)

-   **Sazonalidade (Seasonal)**: Revela padrões que se repetem em intervalos fixos (como mensal, anual)

-   **Resíduo (Remainder/Random)**: Representa variações aleatórias ou eventos não explicados

<!-- Em um modelo aditivo, o que será utiliza, se considera que a série observada provem da soma de suas componentes de tendência, sazonalidade e resíduo. -->

O **Teste de Mann-Kendall** é um teste que verifica se uma série temporal possui tendência, ou seja, responde a pergunta "Meus dados estão subindo, descendo ou ficando estáveis ao longo do tempo?".

```{r}

SINESP_maconha <- SINESP |> filter(evento == "Apreensão de Maconha")
# mean(SINESP_maconha$total_peso)
ts_maconha <- ts(SINESP_maconha$total_peso, 
               frequency = 12,
               start = c(year(min(SINESP_maconha$data_referencia)), month(min(SINESP_maconha$data_referencia))))

SINESP_cocaina <- SINESP |> filter(evento == "Apreensão de Cocaína")
# mean(SINESP_cocaina$total_peso)
ts_cocaina <- ts(SINESP_cocaina$total_peso, 
               frequency = 12,
               start = c(year(min(SINESP_cocaina$data_referencia)), month(min(SINESP_cocaina$data_referencia))))

SINESP_trafico <- SINESP |> filter(evento == "Tráfico de drogas")
ts_trafico <- ts(SINESP_trafico$total, 
               frequency = 12,
               start = c(year(min(SINESP_trafico$data_referencia)), month(min(SINESP_trafico$data_referencia))))

```

```{r}
stl_decomp <- stl(ts_maconha, s.window = "periodic")

datas <- as.Date(as.yearmon(time(ts_maconha)))

df_stl <- data.frame(
  Data = datas,
  Observado = as.numeric(ts_maconha),
  Tendencia = as.numeric(stl_decomp$time.series[, "trend"]),
  Sazonalidade = as.numeric(stl_decomp$time.series[, "seasonal"]),
  Aleatorio = as.numeric(stl_decomp$time.series[, "remainder"])
)

dados_para_hc <- lapply(list(df_stl$Observado, df_stl$Tendencia, 
                           df_stl$Sazonalidade, df_stl$Aleatorio), 
                       function(coluna) {
                         lapply(seq_along(coluna), function(i) {
                           list(
                             x = as.numeric(df_stl$Data[i]) * 86400000, # milissegundos
                             y = coluna[i]
                           )
                         })
                       })

# 6. Criar gráfico
highchart() %>%
  hc_chart(type = "line") %>%
  hc_title(text = "Decomposição STL - Total Peso Mensal de Drogas Apreendidas - Maconha") %>%
  hc_subtitle(text = "Dados polícia estadual do Espírito Santo") |>
  hc_xAxis(type = "datetime",
           title = list(text = "Data"),
           labels = list(format = "{value:%Y-%m}")) %>%
  hc_yAxis(title = list(text = "Valor")) %>%
  hc_plotOptions(series = list(
    marker = list(enabled = FALSE),  # Remove pontos
    lineWidth = 2                   # Espessura da linha
  )) %>%
  hc_add_series(name = "Observado", 
                data = dados_para_hc[[1]]) %>%
  hc_add_series(name = "Tendência", 
                data = dados_para_hc[[2]]) %>%
  hc_add_series(name = "Sazonalidade", 
                data = dados_para_hc[[3]]) %>%
  hc_add_series(name = "Resíduo", 
                data = dados_para_hc[[4]]) %>%
  hc_tooltip(shared = TRUE,
             crosshairs = TRUE,
             pointFormat = "<span style='color:{point.color}'>◉</span> {series.name}: <b>{point.y:.2f}</b><br>",
             xDateFormat = "%Y-%m") %>%
  hc_legend(enabled = TRUE) %>%
  hc_colors(viridis::viridis(10, direction = -1, option = "A")[c(3,5,7,9)]) |>
  hc_caption(text = "Gráfico 11 - Decomposição STL para o total peso mensal de drogas apreendidas (Maconha)")
```

Para o Gráfico 11, a componente sazonal mostra picos recorrentes em Maio, sugerindo possível sazonalidade operacional ou padrões de demanda.

Utilizando o teste Mann-Kendall, temos evidências que indicam não tendência, ou seja, o número de apreensões de maconha está estável ao longo do tempo.

```{r}
stl_decomp <- stl(ts_cocaina, s.window = "periodic")

datas <- as.Date(as.yearmon(time(ts_cocaina)))

df_stl <- data.frame(
  Data = datas,
  Observado = as.numeric(ts_cocaina),
  Tendencia = as.numeric(stl_decomp$time.series[, "trend"]),
  Sazonalidade = as.numeric(stl_decomp$time.series[, "seasonal"]),
  Aleatorio = as.numeric(stl_decomp$time.series[, "remainder"])
)

dados_para_hc <- lapply(list(df_stl$Observado, df_stl$Tendencia, 
                           df_stl$Sazonalidade, df_stl$Aleatorio), 
                       function(coluna) {
                         lapply(seq_along(coluna), function(i) {
                           list(
                             x = as.numeric(df_stl$Data[i]) * 86400000, # milissegundos
                             y = coluna[i]
                           )
                         })
                       })

# 6. Criar gráfico
highchart() %>%
  hc_chart(type = "line") %>%
  hc_title(text = "Decomposição STL - Total Peso Mensal de Drogas Apreendidas - Cocaína") %>%
  hc_subtitle(text = "Dados polícia estadual do Espírito Santo") |>
  hc_xAxis(type = "datetime",
           title = list(text = "Data"),
           labels = list(format = "{value:%Y-%m}")) %>%
  hc_yAxis(title = list(text = "Valor")) %>%
  hc_plotOptions(series = list(
    marker = list(enabled = FALSE),  # Remove pontos
    lineWidth = 2                   # Espessura da linha
  )) %>%
  hc_add_series(name = "Observado", 
                data = dados_para_hc[[1]]) %>%
  hc_add_series(name = "Tendência", 
                data = dados_para_hc[[2]]) %>%
  hc_add_series(name = "Sazonalidade", 
                data = dados_para_hc[[3]]) %>%
  hc_add_series(name = "Resíduo", 
                data = dados_para_hc[[4]]) %>%
  hc_tooltip(shared = TRUE,
             crosshairs = TRUE,
             pointFormat = "<span style='color:{point.color}'>◉</span> {series.name}: <b>{point.y:.2f}</b><br>",
             xDateFormat = "%Y-%m") %>%
  hc_legend(enabled = TRUE) %>%
  hc_colors(viridis::viridis(10, direction = -1, option = "A")[c(3,5,7,9)]) |>
  hc_caption(text = "Gráfico 12 - Decomposição STL para o total peso mensal de drogas apreendidas (Cocaína)")
```

Para o Gráfico 12, a componente sazonal mostra picos recorrentes em Junho, sugerindo possível sazonalidade operacional ou padrões de demanda.

Utilizando o teste Mann-Kendall, teste esse que verifica se uma série temporal possui tendência, temos evidências que indicam tendência, ou seja, o número de apreensões de cocaína está subindo ao longo do tempo.

A tendência oscilante porêm crescente corrobora os resultados do teste Mann-Kendall.

```{r}
stl_decomp <- stl(ts_trafico, s.window = "periodic")

datas <- as.Date(as.yearmon(time(ts_trafico)))

df_stl <- data.frame(
  Data = datas,
  Observado = as.numeric(ts_trafico),
  Tendencia = as.numeric(stl_decomp$time.series[, "trend"]),
  Sazonalidade = as.numeric(stl_decomp$time.series[, "seasonal"]),
  Aleatorio = as.numeric(stl_decomp$time.series[, "remainder"])
)

dados_para_hc <- lapply(list(df_stl$Observado, df_stl$Tendencia, 
                           df_stl$Sazonalidade, df_stl$Aleatorio), 
                       function(coluna) {
                         lapply(seq_along(coluna), function(i) {
                           list(
                             x = as.numeric(df_stl$Data[i]) * 86400000, # milissegundos
                             y = coluna[i]
                           )
                         })
                       })

# 6. Criar gráfico
highchart() %>%
  hc_chart(type = "line") %>%
  hc_title(text = "Decomposição STL - Total Mensal de Drogas Apreendidas - Tráfico") %>%
  hc_subtitle(text = "Dados polícia estadual do Espírito Santo") |>
  hc_xAxis(type = "datetime",
           title = list(text = "Data"),
           labels = list(format = "{value:%Y-%m}")) %>%
  hc_yAxis(title = list(text = "Valor")) %>%
  hc_plotOptions(series = list(
    marker = list(enabled = FALSE),  # Remove pontos
    lineWidth = 2                   # Espessura da linha
  )) %>%
  hc_add_series(name = "Observado", 
                data = dados_para_hc[[1]]) %>%
  hc_add_series(name = "Tendência", 
                data = dados_para_hc[[2]]) %>%
  hc_add_series(name = "Sazonalidade", 
                data = dados_para_hc[[3]]) %>%
  hc_add_series(name = "Resíduo", 
                data = dados_para_hc[[4]]) %>%
  hc_tooltip(shared = TRUE,
             crosshairs = TRUE,
             pointFormat = "<span style='color:{point.color}'>◉</span> {series.name}: <b>{point.y:.2f}</b><br>",
             xDateFormat = "%Y-%m") %>%
  hc_legend(enabled = TRUE) %>%
  hc_colors(viridis::viridis(10, direction = -1, option = "A")[c(3,5,7,9)]) |>
  hc_caption(text = "Gráfico 13 - Decomposição STL para o total mensal de drogas apreendidas (Tráfico)")
```

Para o Gráfico 13, a componente sazonal mostra picos recorrentes em Julho, sugerindo possível sazonalidade operacional ou padrões de demanda.

Utilizando o teste Mann-Kendall, teste esse que verifica se uma série temporal possui tendência, temos evidências que indicam não tendência, ou seja, o número de apreensões está estável ao longo do tempo.
